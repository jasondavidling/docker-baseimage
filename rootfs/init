#!/bin/sh

set -e # Exit immediately if a command exits with a non-zero status.
set -u # Treat unset variables as an error.

STAGE=init

log() {
    printf "[%-10s] $*\n" "$STAGE"
#    echo "[$STAGE] $*"
}

log_script() {
    while read OUTPUT; do
        log "$1: $OUTPUT"
    done
}

# http://cfajohnson.com/shell/cus-faq-2.html#Q11
run() {
    j=1
    while eval "\${pipestatus_$j+:} false"; do
        unset pipestatus_$j
        j=$(($j+1))
    done
    j=1 com= k=1 l=
    for a; do
        if [ "x$a" = 'x|' ]; then
            com="$com { $l "'3>&-
                          echo "pipestatus_'$j'=$?" >&3
                      } 4>&- |'
            j=$(($j+1)) l=
        else
            l="$l \"\$$k\""
        fi
        k=$(($k+1))
    done
    com="$com $l"' 3>&- >&4 4>&-
        echo "pipestatus_'$j'=$?"'
    exec 4>&1
    eval "$(exec 3>&1; eval "$com")"
    exec 4>&-
    j=1
    while eval "\${pipestatus_$j+:} false"; do
        eval "[ \$pipestatus_$j -eq 0 ] || return 1"
        j=$(($j+1))
    done
    return 0
}

log "container is starting..."

# Install container environment variables.
STAGE=cont-env
log "initializing container environment variables..."
rm -rf /var/run/cont-env
mkdir /var/run/cont-env
if [ -d /etc/cont-env.d ]; then
    find /etc/cont-env.d -maxdepth 1 -type f | sort | while read FILE
    do
        FILENAME="$(basename "$FILE")"

        if [ -x "$FILE" ]; then
            echo "executing..." | log_script "$FILENAME"

            set +e
            VAL="$($FILE 2>&1)"
            set -e

            if [ $RC -eq 0 ]; then
                echo "terminated successfully." | log_script "$FILENAME"
            else
                echo "terminated with error $RC." | log_script "$FILENAME"
                exit $RC
            fi

            echo "installing..." | log_script "$FILENAME"
            echo "$VAL" > /var/run/cont-env/"$FILENAME"
        else
            echo "installing..." | log_script "$FILENAME"
            cp "$FILE" /var/run/cont-env/
        fi
    done
fi
log "container environment variables initialized."

# Invoke initialization scripts.
STAGE=cont-init
log "executing container initialization scripts..."
if [ -d /etc/cont-init.d ]; then
    find /etc/cont-init.d -maxdepth 1 -type f | sort | while read FILE
    do
        FILENAME="$(basename "$FILE")"

        if [ ! -x "$FILE" ]; then
            echo "WARNING: not executable, ignoring." | log_script "$FILENAME"
            continue
        fi
        echo "executing..." | log_script "$FILENAME"

        set +e
        run "$FILE" 2>&1 \| log_script "$FILENAME"
        RC=$pipestatus_1
        set -e

        if [ $RC -eq 0 ]; then
            echo "terminated successfully." | log_script "$FILENAME"
        else
            echo "terminated with error $RC." | log_script "$FILENAME"
            exit $RC
        fi
    done
fi
log "all container initialization scripts executed."

# Finally, invoke the process supervisor.
STAGE=init

CINIT_ARGS="-p supervisor"
if [ "${CONTAINER_DEBUG:-0}" -eq 1 ]; then
    CINIT_ARGS="$CINIT_ARGS --debug"
fi

log "giving control to process supervisor."
exec /usr/sbin/cinit $CINIT_ARGS

# vim:ft=sh:ts=4:sw=4:et:sts=4
